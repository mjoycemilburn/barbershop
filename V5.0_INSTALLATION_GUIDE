Step 1.0 Database Initialisation

Acquire a website and create a database for the application (the name is not significant) on the website's server. Use the scripts in the mysql_tables file to create the database structure. 

Step 2.0 Software installation

Create a folder calls booker_shared_code on your website's server and populate this with the booker.html, login_engine, listener.php, listener_sandbox.php and paypalIPN.php files from github. Likewise create cert, incudes and php folders in booker_shared_code and populate these from github.

Step 3.0 Third party liaison

You'll need Paypal and Postmark accounts to support your testing. Use the credentials for these to create a cacert.pem file in the certs folder and to set the Postmark credentials in php/send_email-via-postmark.php. Of course, you don't have to use Postmark for your email distribution, but I've personally found them very reliable.

Step 4.0 Shop domains/subdomains

Acquire a domain for your operation (eg cumbrianstylist.com) and for each shop create a subdomain of the form shopname.cumbrinastylist.com. For each shop create a folder on your server of with the name shopname.cumbrianstylist.com and populate it with files index.php and login.php from github. For each shop also create a barber.jpg file with appropriate logo and detail. Barber.jpg in github provides an example.

Step 5.0 Database Population

For each shop create a record in the ecommerce_barbershops table with the shop's url (eg oneills.cumbrianstyist.com), individual paypal business address (each shop is assumed to have its own paypal a/c with a corresponding business address), shop name (this serves to identify the shop's control page), shop_code (allocated sequentially) and an appropriate value for the "number_of_slots_per_hour" parameter (agreed by consultation with the shop). Shop 1 is assumed to be a testing slot that direct payments to the sandbox_listener (thus accepting virtual payments) rather than listener (which directs real money to the shop's paypal account). Similarly, for each shop create entries in the ecommerce_shop_services table defining the services offered and the corresponding prices. Only "standard" services will be available for selection by customers. "Special" services are available only to telephone bookers (this is how you would accomodate lengthy procedures by booking back-to-back reservation slots). Set a "default_service_code" in the barbershops record for the shop to display the service that will be pre-selected in the interface's pull-down lists. Also, by agreement with the shop management, set a user-code and password in the shop's user_password record. The record's trusted_user_code field will be set on first use

Step 6.0

The system should be tested by trying to make reservations for whatever subdomain you've allocated to shop 1.
